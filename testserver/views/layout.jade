doctype html
html
  head
    title= title
    link(rel='stylesheet', href='/stylesheets/style.css')
  body
    block content

style(type='text/css').
  body {
    box-sizing: border-box;
    background: black;
    width: 100%;
    height: 100%;
  margin: 0;
  }
  .console {
    color: white;
    word-break: break-all;
    text-align: left;
    font-weight: 900;
    font-size: 14px;
  }

script.
    log = {
        page: function (text) {
            text = text.split('\n');
            for (var i = 0; i < text.length; i++) {
                document.getElementsByClassName('console')[0].innerHTML += text[i]+'<br>';
            }
        }
    }
    class Ajax {
        constructor() {

        }

        sendRequest(url, req, callback) {
            var XHR = ("onload" in new XMLHttpRequest()) ? XMLHttpRequest : XDomainRequest;
            var xhr = new XHR();
            xhr.open((req.type == 'POST' ? 'POST' : 'GET'), url);
            // xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
            xhr.setRequestHeader('Content-Type', 'application/json');
            xhr.onload = function (e) {
                if (xhr.status != 200) {
                    console.log(xhr.status + ': ' + xhr.statusText);
                    return (NULL);
                } else {
                    let str = JSON.parse(xhr.responseText);
                    callback(str);
                }
            };
            xhr.send((req.body ? JSON.stringify(req.body) : 0));
        }
    }
    window.onload = function () {
        var ajax = new Ajax ();

        var ajaxReq = {
            type: 'POST',
            body: {}
        };
        ajax.sendRequest('/test', ajaxReq, function (data) {
            console.log(data);
            log.page(data);
        });

        /*log.page('hello\nthen again..\nhello');*/

    }
